int age = 20;                      // Целочисленная переменная типа int
Console.WriteLine(age);            // 20

string fullName = "Ivan Ivanov";   // Строковая переменная
bool isSiteAvailable = false;      // Булева переменная

decimal сумма = 1000;              // Буквы в идентификаторах могут быть не только английскими
Console.WriteLine(сумма);          // 1000

string @class = "Some class";      // Идентификаторы не могут совпадать с ключевыми словами (можно обойти, добавив символ "@" в начале)

uint year, hour, minute = 50;      // Можно объявлять несколько переменных в одной строке, если они имеют одинаковый тип. Можно присвоить значения сразу, но это необязательно.
//year = -1;                       // Нельзя присвоить отрицательное число переменной, которая имеет беззнаковый тип

//Console.WriteLine(year);         // Нельзя использовать переменную до присваивания ей значения.

char letter = 'A';                 // Переменная типа char
char space = ' ';                  // Переменная типа char

age = 30;                          // Изменение значения переменной
Console.WriteLine(age);            // 30

//age = 40.5;                      // Нельзя присвоить переменной значение другого типа
//age = "str";                     // Нельзя присвоить переменной значение другого типа

year = 2000;                       // Присваивание переменной значения после объявления

Console.WriteLine(year);           // 2000

var usersCount = 100;              // Неявная типизация (переменная имеет тип int)
var bookTitle = "Harry Potter";    // Неявная типизация (переменная имеет тип string)
//bookTitle = 54;                  // Нельзя присвоить переменной значение другого типа

//var speed;                       // Нельзя использовать неявную типизацию без присваивания переменной значения при объявлении

var book = new Dictionary<string, string>();  // Демонстрация громоздких типов и преимущества var
string input = Console.ReadLine();            // Если использовать var, то сходу может быть непонятно, какой тип имеет переменная

Dictionary<string, string> output = new();    // Новый синтаксис, появившийся в C# 9, когда можно не указывать тип после оператора new 

var pageNum = new int();                      // То же самое, что и "int pageNum = 0;"
const double pi = 3.14;                       // Объявление константы
//pi = 5;                                     // Нельзя переприсвоить константу
